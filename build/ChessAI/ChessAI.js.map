{"version":3,"sources":["../../source/ChessAI/ChessAI.ts"],"names":[],"mappings":"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","file":"ChessAI.js","sourcesContent":["import { Chessboard, Positions, COLORS } from \"@chesslib/core\";\r\nimport { BoardEvaluations } from \"./BoardEvals\";\r\n\r\nconst PIECE_VALUES = {\r\n\tP: 10,\r\n\tB: 30,\r\n\tN: 30,\r\n\tR: 50,\r\n\tQ: 80,\r\n\tK: 900,\r\n};\r\n\r\nexport class ChessAI\r\n{\r\n\tchessboard:Chessboard = null;\r\n\r\n\tmoves = [];\r\n\tplayingSide = 0;\r\n\tplayerCount = 2;\r\n\tsearchTime = 0;\r\n\r\n\tconstructor(chessboard, playingSide, playerCount)\r\n\t{\r\n\t\tthis.chessboard = chessboard;\r\n\t\tthis.playingSide = playingSide;\r\n\t\tthis.playerCount = playerCount;\r\n\t}\r\n\r\n\tsetBoard(chessboard)\r\n\t{\r\n\t\tthis.chessboard = chessboard;\r\n\t}\r\n\r\n\tloadBoard(positions)\r\n\t{\r\n\t\tthis.chessboard = Chessboard.fromPosition(positions);\r\n\t}\r\n\r\n\tdoMove(move)\r\n\t{\r\n\t\tif(!this.chessboard.doMove(move))\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tdoMoveFEN(move)\r\n\t{\r\n\t\tif(!this.chessboard.doMoveFEN(move))\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tmakeMoves(searchDepth=4, amount = 1)\r\n\t{\r\n\t\tvar bestMoves = this.getBestMoves(searchDepth, amount);\r\n\t\tif(!bestMoves.length)\r\n\t\t{\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tfor(var bestMove of bestMoves)\r\n\t\t{\r\n\t\t\tthis.doMove(bestMove);\r\n\t\t}\r\n\t\treturn bestMoves;\r\n\t}\r\n\r\n\tgetBestMove(side, searchDepth)\r\n\t{\r\n\t\t\r\n\t\tvar bestMoves = this.getBestMoves(searchDepth);\r\n\r\n\t\tif(!bestMoves.length)\r\n\t\t{\r\n\t\t \treturn this.getRandomMove();\r\n\t\t}\r\n\t\t\r\n\t\t// var bestMove = null;\r\n\t\t// var bestValue = -9999;\r\n\t\t// if(move.score > bestValue)\r\n\t\t// {\r\n\t\t// \tbestMove = move;\r\n\t\t// \tbestValue = move.score;\r\n\t\t// }\r\n\t\t\r\n\t\treturn bestMoves[0];\r\n\t}\r\n\r\n\tgetBestMoves(searchDepth, limit=5)\r\n\t{\r\n\t\tthis.searchTime = Date.now() + 100;\r\n\t\tvar moves = this.chessboard.getMovesFEN(this.playingSide);\r\n\t\t\r\n\t\tfor(let move of moves)\r\n\t\t{\r\n\t\t\tthis.chessboard.moveFEN(move.from, move.to);\r\n\t\t\t\r\n\t\t\t// Do not allow the king to be killed?\r\n\t\t\tmove.score = this.evaluateBestMove(this.playingSide, searchDepth - 1, -10000, 10000, false);\r\n\t\t\tthis.chessboard.undo();\r\n\r\n\t\t}\r\n\r\n\t\treturn moves.sort( (a, b) => {\r\n\t\t\tif(a.score < b.score)\r\n\t\t\t\treturn 1;\r\n\t\t\tif(a.score > b.score)\r\n\t\t\t\treturn -1;\r\n\t\t\treturn 0;\r\n\t\t}).slice(0, limit);\r\n\t}\r\n\t\r\n\tgetNextPlayerSide(playerSide)\r\n\t{\r\n\t\treturn (playerSide + 1) % this.playerCount;\r\n\t}\r\n\r\n\tevaluateBestMove(playerSide, depth, alpha, beta, isMaximisingPlayer)\r\n\t{\r\n\t\tif (depth === 0)\r\n\t\t{\r\n\t\t\treturn this.evaluateBoard(this.playingSide);\r\n\t\t}\r\n\t\tvar currentPlayer = this.getNextPlayerSide(playerSide);\r\n\t\tvar moves = this.chessboard.getMoves(currentPlayer);\r\n\r\n\t\tif (isMaximisingPlayer)\r\n\t\t{\r\n\t\t\tvar bestValue = -9999;\r\n\t\t\tfor (let move of moves)\r\n\t\t\t{\r\n\t\t\t\tthis.chessboard.move(move.from, move.to);\r\n\t\t\t\tbestValue = Math.max(bestValue, this.evaluateBestMove(currentPlayer, depth - 1, alpha, beta, !isMaximisingPlayer));\r\n\t\t\t\tthis.chessboard.undo();\r\n\t\t\t\talpha = Math.max(alpha, bestValue);\r\n\t\t\t\tif (beta <= alpha)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn bestValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn bestValue;\r\n\t\t} else {\r\n\t\t\tvar bestValue = 9999;\r\n\t\t\tfor (let move of moves)\r\n\t\t\t{\r\n\t\t\t\tthis.chessboard.move(move.from, move.to);\r\n\t\t\t\tbestValue = Math.min(bestValue, this.evaluateBestMove(currentPlayer, depth - 1, alpha, beta, !isMaximisingPlayer));\r\n\t\t\t\tthis.chessboard.undo();\r\n\t\t\t\t\r\n\t\t\t\tbeta = Math.min(beta, bestValue);\r\n\t\t\t\tif (beta <= alpha)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn bestValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn bestValue;\r\n\t\t}\r\n\t}\r\n\r\n\tgetRandomMove()\r\n\t{\r\n\t\tvar moves = this.chessboard.getMovesFEN(this.playingSide);\r\n\t\tif(!moves.length)\r\n\t\t\treturn null;\r\n\t\tvar randMove = moves[Math.floor(Math.random() * moves.length)];\r\n\t\trandMove.score = 0;\r\n\t\treturn randMove;\r\n\t}\r\n\r\n\tevaluateBoard(side)\r\n\t{\r\n\t\tvar boardValue = 0;\r\n\t\tthis.chessboard.forEachPiece( piece => {\r\n\t\t\tif(side == piece.color)\r\n\t\t\t{\r\n\t\t\t\tboardValue += PIECE_VALUES[piece.type] + BoardEvaluations[piece.color][piece.type][piece.square.y][piece.square.x];\r\n\t\t\t}else{\r\n\t\t\t\tboardValue -= PIECE_VALUES[piece.type] + BoardEvaluations[piece.color][piece.type][piece.square.y][piece.square.x];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\treturn boardValue;\r\n\t}\r\n\t\r\n};"]}